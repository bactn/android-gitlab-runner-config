
variables:
  ANDROID_COMPILE_SDK: "28"
  ANDROID_BUILD_TOOLS: "28.0.2"
  ANDROID_SDK_TOOLS:   "4333796"

before_script:
  - export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk"
  - export PATH=$PATH:$JAVA_HOME/bin
  - echo "------------- Install Android SDK ------------- "
  - wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_TOOLS}.zip
  - unzip -d android-sdk-linux android-sdk.zip
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platforms;android-${ANDROID_COMPILE_SDK}" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "platform-tools" >/dev/null
  - echo y | android-sdk-linux/tools/bin/sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}" >/dev/null
  - export ANDROID_HOME=$PWD/android-sdk-linux
  - export PATH=$PATH:$PWD/android-sdk-linux/platform-tools/
  - chmod +x ./gradlew
  # temporarily disable checking for EPIPE error and use yes to accept all licenses
  - set +o pipefail
  - yes | android-sdk-linux/tools/bin/sdkmanager --licenses
  - set -o pipefail

# Define build stages: build, test, lint, deploy...
stages:
  - lint
  - build

# Caching project dependencies
cache:
  key: ${CI_PROJECT_ID}
  paths:
    - .m2/
    - .gradle/

# Linting job
lint_dev:
  stage: lint
  tags:
    - linux4
  script:
    - ./gradlew ktlint

# Build job
# Add other build targets here
build_dev:
  stage: build
  tags:
    - linux4
  script:
    - ./gradlew clean assembleDebug
